import * as PIXI            from 'pixi.js'
import React, { Component } from 'react'


import Context              from '2d/stage/all/Context'


class Line extends Component {
  static defaultProps = {
    path: [],
  }

  componentDidMount() {
    const { context } = this.props
    const { stage } = context.app

    this.stage = stage

    this.mount()
  }

  componentDidUpdate() {
    this.update()
  }

  componentWillUnmount() {
    this.unmount()
  }

  mount = () => {
    this.instance = new PIXI.Graphics()

    this.update(this.props)

    this.stage.addChild(this.instance)
  }

  unmount = () => {
    this.stage.removeChild(this.instance)
  }

  update = (props) => {
    const { color } = this.props
    const { path } = this.props
    const instance = this.instance

    //instance.position.set(...path[0])

    if (path.length) {
      instance.clear()

      //instance.beginFill(0xffffff)
      instance.lineStyle(2, color ? color : 0x0000ff, 1)

      instance.moveTo(path[0][0], path[0][1])
      for (let index = 1; index < path.length; index++) {
        const [x, y] = path[index]
        instance.lineTo(x, y)
      }
    }

    
    //instance.endFill()

    // instance.interactive = true
    // instance.buttonMode = true

    // instance.click = this.onClick

    // instance.on('pointerdown', this.onDragStart)
    // instance.on('pointerup', this.onDragEnd)
    // instance.on('pointerupoutside', this.onDragEnd)
    // instance.on('pointermove', this.onDragMove);
  }

  render() {
    return null
  }
}

export default (props) => {
  return (
    <Context.Consumer>
      {(context) => (
        <Line {...props} context={ context } />
      )}
    </Context.Consumer>
  )
}