import create               from 'evokeme/redux/api/create'
import remove               from 'evokeme/redux/api/remove'
import update               from 'evokeme/redux/api/update'


export default (payload) => {
  const {
    name,
    override = {},
  } = payload

  const reduxList = [
    override.create || create,
    override.remove || remove,
    override.update || update,
  ].map(item => item({ name }))

  const types = reduxList.reduce((prev, item) => ({ ...prev, ...item.types }), {})
  const sagaList = reduxList.map(item => item.saga())
  const reducerMap = reduxList.reduce((prev, item) => ({ ...prev, ...item.reducerMap }), {})

  const STATE = {
  }

  const reducer = (state = STATE, action) => {
    const { type } = action
    if (reducerMap[type]) return reducerMap[type](state, action)
    return state
  }

  return {
    reducer,
    sagaList,
    types,
  }
}
