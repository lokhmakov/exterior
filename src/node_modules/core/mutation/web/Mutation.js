import PropTypes            from 'prop-types'
import React, { Component } from 'react'
import { connect }          from 'react-redux'
import { compose }          from 'redux'


import createDebugger       from 'core/debug/api/create'
import types                from 'core/mutation/api/types'


const debug = createDebugger(`core:query:web:Query`)

class Mutation extends Component {
  static propTypes = {
    name: PropTypes.string.isRequired,
    entity: PropTypes.string.isRequired,
    children: PropTypes.func.isRequired,
  }

  mutate = async (props) => {
    try {
      const { data } = this.props
      const { dispatch } = this.props
      const { entity } = this.props
      const { mutation } = this.props
      const { name } = this.props
      const { order } = this.props

      dispatch({
        type: types.START,
        payload: {
          entity,
          name,
          mutation,
          props,
        }
      })

    } catch (err) {
      debug(`this.query()`, `ERROR`, err)
    }
  }

  render() {
    debug(`render()`, this.props)

    return this.props.children({
      mutate: this.mutate,
    })
  }
}

const mapStateToProps = (state, ownProps) => {
  return {
  }
}

export default compose(
  connect(mapStateToProps)
)(Mutation)
