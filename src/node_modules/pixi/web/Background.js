import React, { Component } from 'react'

import * as PIXI            from 'pixi.js'


import Context              from 'pixi/all/Context'


const who = [`pixi`, `web`, `Background`]

class Background extends Component {
  static defaultProps = {

  }

  constructor(props) {
    super(props)
  }

  componentDidMount() {
    const { context } = this.props
    const { action } = context
    const { stage } = action.app.get()

    this.stage = stage

    this.mount({ stage })
  }

  componentWillUnmount() {
    this.unmount()
  }

  mount = (payload) => {
    this.instance = new PIXI.Container()
    
    this.update(this.props)
    
    this.stage.addChild(this.instance)
  }

  unmount = () => {
    this.stage.removeChild(this.instance)
  }

  imageAdd = (props) => {
    const { imageLink } = props

    const texture = PIXI.Texture.from(imageLink)
    
    const image = this.mesh = new PIXI.projection.Sprite2d(texture)



    this.instance.addChild(image)
  }

  update = (props) => {
    const { context } = props
    const { action } = context
    const { renderer } = action.app.get()
    
    const { screen } = renderer
    const { width, height } = screen
    
    const { x, y } = props
    const instance = this.instance

    this.imageAdd(props)

    // instance.clear();
    
    // instance.beginFill(0xffaaaa)
    // instance.drawRect(0, 0, width, height)
    // instance.endFill()

    // instance.interactive = true
    // // instance.buttonMode = true

    // instance.click = this.onClick
  }

  onClick = (payload) => {
    const { context } = this.props
    const { onClick } = this.props

    const {
      data: { 
        global: {
          x, y,
        }
      }
    } = payload

    context.debug && console.log(...who, `onClick`, { x, y })
    onClick && onClick({ x, y })
  }

  render() {
    return null
  }
}

export default (props) => {
  return (
    <Context.Consumer>
      {(context) => (
        <Background {...props} context={ context } />
      )}
    </Context.Consumer>
  )
}