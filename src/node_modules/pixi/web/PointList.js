import React, { Component } from 'react'


import Context              from 'evokeme/entity/all/Context'
import Provider             from 'evokeme/entity/all/Provider'

import Point                from 'pixi/web/Point'


const who = [`pixi`, `web`, `PointList`]

class PointList extends Component {
  componentDidMount = () => {
    const { context } = this.props
    const { onMount } = this.props

    onMount && onMount({ context })
  }

  onDragMove = ({ id, x, y }) => {
    const { context } = this.props
    
    context && context.point.update({ id, x, y })
  }

  onClick = ({ id, x, y }) => {
    const { onClick } = this.props

    onClick && onClick({ id, x, y })
  }

  render() {
    const { context } = this.props

    if (context && context.point) {
      const { data, order } = context.point

      return order.map((id) => {
        const { x, y } = data[id]

        // console.log(...who, `POINT`, x, y)

        return (
          <Point
            key={ id }
            x={ x }
            y={ y }

            onDragMove={({ x, y }) => this.onDragMove({ id, x, y })}
            onClick={({ x, y }) => this.onClick({ id, x, y })}
          />
        )
      })
    }

    return null
  }
}

export default (props) => {
  return (
    <Provider entity='point'>
      <Context.Consumer>
        {(context) => (
          <PointList
            {...props}
            context={ context }
          />
        )}
      </Context.Consumer>
    </Provider>
  )
}