import React, { Component } from 'react'


import Context              from 'evokeme/entity/all/Context'
import Provider             from 'evokeme/entity/all/Provider'

import Line                 from 'pixi/web/Line'


const who = [`pixi`, `web`, `LineList`]

class LineList extends Component {
  componentDidMount = () => {
    const { context } = this.props
    const { onMount } = this.props

    onMount && onMount({ context })
  }

  componentDidUpdate = () => {
    
  }

  onDragMove = ({ id, x, y }) => {
    const { context } = this.props
    
    context && context.item.update({ id, x, y })
  }

  onClick = ({ id, x, y }) => {
    const { onClick } = this.props

    onClick && onClick({ id, x, y })
  }

  renderLine({ id }) {
    const { context } = this.props
    
    const { lineToPoint } = context
    const { point } = context

    const pointIdList = []

    console.log(...who, `renderLine`, id)

    let index = -1
    while (index++ < lineToPoint.order.length - 1) {
      const lineToPointId = lineToPoint.order[index]
      const { lineId, pointId } = lineToPoint.data[lineToPointId]

      if (lineId ===id) {
        pointIdList.push(pointId)
      }
    }

    const path = pointIdList.map((id) => {
      const { x, y } = point.data[id]
      return [x, y]
    })

    return (
      <Line key={ id } path={ path } />
    )
  }

  render() {
    const { context } = this.props

    if (context) {
      const { line, lineToPoint } = context

      return line.order.map((id) => {
        return this.renderLine({ id })
      })
    }

    return null
  }
}

export default (props) => {
  return (
    <Provider entity={[
      'lineToPoint',
      'line',
      'point',
    ]}>
      <Context.Consumer>
        {(context) => {
          return (
            <LineList
              {...props}
              context={ context }
            />
          )
        }}
      </Context.Consumer>
    </Provider>
  )
}