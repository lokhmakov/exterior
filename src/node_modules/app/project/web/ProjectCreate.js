import React, { Component } from 'react'
import { Button }           from 'semantic-ui-react'
import { Card }             from 'semantic-ui-react'
import { Icon }             from 'semantic-ui-react'


import Block                from 'layout/web/Block'


class ProjectCreate extends Component {
  onChange = (e) => {
    const reader = new FileReader()
    reader.onload = this.onLoad
    reader.readAsDataURL(e.currentTarget.files[0])
  }

  onLoad = async (e) => {
    try {
      const result = e.target.result
      const imageBase64 = result.replace(/^data:image\/[^]+base64,/, '')

      this.setState({ loading: true })

      const response = await fetch('https://api.imgur.com/3/image', {
        method: 'POST',
        headers: {
          Authorization: 'Client-ID adcf840e0bf408c',
          Accept: 'application/json',
        },
        body: imageBase64
      })
      const json = await response.json()
      
      if (json.success && json.status === 200) {
        const imageLink = json['data']['link']

        this.setState({ loading: false })
        if (this.props.onAdd) this.props.onAdd({ imageLink })
      } else {
        this.setState({ loading: false })
        if (this.props.onError) this.props.onError({ error: json.error })
        throw new Error(json.error)
      }
    } catch (err) {
      this.setState({ loading: false })
      if (this.props.onError) this.props.onError({ error: err })
    }
  }  

  render() {
    return (
      <Card style={{ width: 200, height: 100 }}>
        <Card.Content style={{ padding: 0 }}>
          <Button animated as='label' htmlFor='file' type='button' style={{ width: 200, height: 100, paddingTop: 35 }}>
            <Button.Content as='label' htmlFor='file' visible>
              <Icon name='plus square outline' size='big' />
            </Button.Content>
            <Button.Content as='label' htmlFor='file' hidden>
              Добавить
            </Button.Content>
          </Button>
        </Card.Content>
        <input type='file' id='file' style={{ display: `none` }} onChange={ this.onChange }/>
      </Card>
    )
  }
}

export default ProjectCreate