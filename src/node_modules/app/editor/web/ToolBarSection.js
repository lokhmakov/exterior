import React, { Component } from 'react'

import { Button }           from 'semantic-ui-react'
import { Container }        from 'semantic-ui-react'
import { Input }            from 'semantic-ui-react'


import modeMap              from 'app/project/api/modeMap'
import projectQuery         from 'app/project/api/local/query'
import projectUpdate        from 'app/project/api/local/update'

import createDebugger       from 'core/debug/api/create'
import Mutation             from 'core/mutation/web/Mutation'
import Query                from 'core/query/web/Query'

import Block                from 'layout/web/Block'


const debug = createDebugger(`app:editor:web:ToolBarSection`)

class ToolBarSection extends Component {
  renderProjectQuery = ({ data, order }) => {
    const { id } = this.props

    if (!order.length) return null

    const doc = data[id]
    
    const { scale } = doc
    const { unit } = doc

    return (
      <Mutation
        name='projectUpdate'
        entity='project'

        mutation={ projectUpdate }
      >
        {({ mutate }) => (
          <React.Fragment>
            <Button
              content='Добавить область'
              primary

              onClick={() => mutate({ ...doc, mode: modeMap.GROUP_ADD })}
            />          
            <Button
              content='Масштаб'
              primary
              
              onClick={() => mutate({ ...doc, mode: modeMap.SCALE_MEASURE })}
            />
            <Input
              name='unit'
              placeholder=''

              value={ unit }
              onChange={({ target: { value } }) => mutate({ ...doc, unit: value })}
            />            
            <Input
              name='scale'
              placeholder=''

              value={ scale }
              onChange={({ target: { value }}) => mutate({ ...doc, scale: value })}
            />
          </React.Fragment>
        )}
      </Mutation>
    )
  }

  render() {
    return (
      <Block style={{ height: 60 }} center middle>
        <Query
          name='projectQuery'
          entity='project'

          query={ projectQuery }
        >      
          { this.renderProjectQuery }
        </Query>
      </Block>
    )
  }
}

export default ToolBarSection