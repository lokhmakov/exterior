import React, { Component } from 'react'


import groupQuery           from 'app/group/api/local/query'
import groupUpdate          from 'app/group/api/local/update'

import modeMap              from 'app/project/api/modeMap'
import projectUpdate        from 'app/project/api/local/update'
import projectQuery         from 'app/project/api/local/query'

import textureQuery         from 'app/texture/api/local/query'
import TextureList          from 'app/texture/web/TextureList'

import createDebugger       from 'core/debug/api/create'
import Mutation             from 'core/mutation/web/Mutation'
import Query                from 'core/query/web/Query'


import Block                from 'layout/web/Block'


const debug = createDebugger(`app:texture:web:TextureListSection`)

class TextureListSection extends Component {
  renderTextureQuery = ({ groupDoc, projectDoc, groupMutate }) => ({ data, order }) => {
    return (
      <TextureList
        data={ data }
        order={ order }

        onClick={({ imageLink }) => {
          console.log(`TEXTURE_LIST`, `ON_CLICK`, groupDoc)
          if (groupDoc) {
            groupMutate({
              ...groupDoc,

              imageLink,
            })
          }
        }}
      />
    )
  }

  renderGroupQuery = (doc) => ({ data, order }) => {
    debug(`renderGroupQuery()`, data, order)

    const groupDoc = doc && doc.groupId && data[doc.groupId]

    return (
      <Mutation
        name='groupUpdate'
        entity='group'

        mutation={ groupUpdate }
      >
        {({ mutate }) => (
          <Query
            name='textureQuery'
            entity='texture'

            query={ textureQuery }
          >
            {
              this.renderTextureQuery({
                projectDoc: doc,
                groupDoc,
                groupMutate: mutate,
              })
            }
          </Query>
        )}
      </Mutation>
    )
  }

  renderProjectQuery = ({ data, order }) => {
    const { id } = this.props
    const doc = data[id]

    return (
      <Query
        name='groupQuery'
        entity='group'

        query={ groupQuery }
      >
        { this.renderGroupQuery(doc) }
      </Query>
    )
  }

  render() {
    return (
      <Block style={{ height: 60 }} center middle>
        <Query
          name='projectQuery'
          entity='project'

          query={ projectQuery }
        >
          { this.renderProjectQuery }
        </Query>      
      </Block>
    )
  }
}

export default TextureListSection